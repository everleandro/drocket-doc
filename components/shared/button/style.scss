$btn-border-radius: $border-radius-root !default;
$btn-font-weight: 500 !default;
$btn-letter-spacing: 0.089em !default;
$btn-border-style: solid !default;
$btn-border-width: 2px !default;
$btn-rounded-border-radius: 28px !default;
$btn-text-transform: uppercase !default;
$btn-transition-duration: 0.28s !default;

$btn-states: map-merge(
  (
    "focus": 0.05,
    "hover": 0.1,
    "active": 0.3,
  ),
  ()
) !default;

$btn-font-sizes: map-merge(
  (
    "x-small": 0.625rem,
    "small": 0.75rem,
    "default": 0.875rem,
    "large": 0.875rem,
    "x-large": 1rem,
  ),
  ()
) !default;

$fab-font-sizes: map-merge(
  (
    "x-small": 1.25rem,
    "small": 1.25rem,
    "default": 1.5rem,
    "large": 0.714rem,
    "x-large": 2rem,
  ),
  ()
) !default;

$fab-height: map-merge(
  (
    "x-small": 2em,
    "small": 2.5em,
    "default": 3.5em,
    "large": 4em,
    "x-large": 4.5em,
  ),
  ()
) !default;

$stacked-height: map-merge(
  (
    "x-small": 2em,
    "small": 2.5em,
    "default": 4.5em,
    "large": 5.5em,
    "x-large": 8em,
  ),
  ()
) !default;

$btn-height: map-merge(
  (
    "x-small": 2.187rem,
    "small": 2.5rem,
    "default": 3rem,
    "large": 3.125rem,
    "x-large": 3.4375rem,
  ),
  ()
) !default;

$icon-font-sizes: map-merge(
  (
    "x-small": 1.25rem,
    "small": 1.3rem,
    "default": 1.625rem,
    "large": 2rem,
    "x-large": 2.375rem,
  ),
  ()
) !default;

.e-btn {
  font-weight: $btn-font-weight;
  letter-spacing: $btn-letter-spacing;
  color: map-get($colors, "black");
  border-color: map-get($colors, "black");
  text-indent: $btn-letter-spacing;
  text-transform: $btn-text-transform;
  transition-duration: $btn-transition-duration;
  border-radius: $btn-border-radius;
  border: none;
  align-items: center;
  display: inline-flex;
  flex: 0 0 auto;
  justify-content: center;
  outline: 0;
  position: relative;
  cursor: pointer;
  background-color: unset;
  padding: 0 1em;
  min-width: 4em;
  font-family: $root-font-family;
  box-shadow: 0 3px 1px -2px rgb(0, 0, 0, 0.2), 0 2px 2px 0 rgb(0, 0, 0, 0.14),
    0 1px 5px 0 rgb(0, 0, 0, 0.12);
  height: var(--btn-height, unset);
  font-size: var(--btn-font-size, inherit);
  .e-icon__svg {
    fill: currentColor;
  }
  &__content {
    line-height: initial;
    flex-direction: column;
  }

  + .e-btn {
    margin-left: $space-base;
  }

  @include prefix(user-select, none);
  text-decoration: none;
  transition-property: box-shadow, transform, opacity, background-color;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  vertical-align: middle;
  white-space: nowrap;

  @include button-before();

  &:focus,
  &:active {
    text-decoration: none;
  }

  &--rounded {
    border-radius: $btn-rounded-border-radius;
  }

  &--icon,
  &--fab {
    padding: 0;
    min-width: 0;
    border-radius: 50%;
  }

  &--depressed,
  &--disabled,
  &--text {
    box-shadow: none;
  }

  &--block {
    &:not(.e-btn--fab):not(.e-btn--icon) {
      display: flex;
      flex: 1 0 auto;
      min-width: 100% !important;
    }
  }

  &--text {
    @each $key, $value in $colors {
      &.e-btn--#{$key} {
        color: $value;
        background-color: transparent;
      }
    }
  }

  &__prepend {
    margin-right: 0.5rem;
  }

  &__append {
    margin-left: 0.5rem;
  }

  @each $key, $value in $colors {
    &--#{$key} {
      color: map-get($contrast-colors, $key) or white;
      background-color: $value;

      &.e-btn--icon {
        color: $value;
        background-color: transparent;
      }
      //   .e-icon__svg {
      //     fill: $value;
      //   }
    }
  }

  @each $key, $value in $btn-states {
    &:#{$key}:before {
      opacity: $value;
    }
  }

  @each $key, $value in $btn-font-sizes {
    &--size-#{$key} {
      --btn-font-size: #{$value};
      --btn-height: #{map-get($btn-height, $key)};

      &.e-btn--icon {
        --btn-font-size: #{map-get($icon-font-sizes, $key)};
      }

      &.e-btn--fab {
        --btn-height: #{map-get($fab-height, $key)};
        --btn-font-size: #{map-get($fab-font-sizes, $key)};
      }

      &.e-btn--stacked {
        --btn-height: #{map-get($stacked-height, $key)};
      }
    }
  }

  &--stacked {
    flex-direction: column;

    .e-btn {
      &__prepend {
        margin: 0 0 0.25rem 0;
      }

      &__append {
        margin: 0.25rem 0 0 0;
      }
    }
  }

  &--outlined {
    border: $btn-border-width $btn-border-style;

    @each $key, $value in $colors {
      &.e-btn--#{$key}:not(.e-btn--disabled) {
        border-color: $value;
        color: $value;
      }
    }

    background-color: transparent;
  }

  &--icon {
    background-color: transparent;
    padding: 0;
    width: var(--btn-height, unset);
  }

  &--fab {
    border-radius: 100%;
    width: var(--btn-height, unset);
  }

  &--fab,
  &--icon {
    width: var(--btn-height-responsive, var(--btn-height, unset));

    .e-icon {
      width: var(--btn-height, unset);

      .e-icon__svg {
        width: var(--btn-font-size, inherit);
        height: var(--btn-font-size, inherit);
      }
    }

    .e-btn__content {
      display: flex;
      justify-content: center;
      align-items: center;
    }
  }

  &--loading {
    pointer-events: none;

    .e-btn {
      &__content,
      &__append,
      &__prepend {
        opacity: 0;
      }
    }
  }

  &--disabled {
    pointer-events: none;
    cursor: not-allowed;
    color: map-get($contrast-colors, "e-vue-disabled") or white;
    background-color: map-get($colors, "e-vue-disabled");
  }

  &__loader {
    align-items: center;
    display: flex;
    height: 100%;
    justify-content: center;
    left: 0;
    position: absolute;
    top: 0;
    width: 100%;
  }
}
